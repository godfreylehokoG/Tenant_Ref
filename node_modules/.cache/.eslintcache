[{"/Users/godfrey/Desktop/Tenant_Ref/Tenant_Ref/src/index.js":"1","/Users/godfrey/Desktop/Tenant_Ref/Tenant_Ref/src/App.js":"2","/Users/godfrey/Desktop/Tenant_Ref/Tenant_Ref/src/components/SendEmail/SendEmailPage.jsx":"3","/Users/godfrey/Desktop/Tenant_Ref/Tenant_Ref/src/components/FormBuilder/index.jsx":"4","/Users/godfrey/Desktop/Tenant_Ref/Tenant_Ref/src/components/Register/index.jsx":"5","/Users/godfrey/Desktop/Tenant_Ref/Tenant_Ref/src/components/Login/index.jsx":"6","/Users/godfrey/Desktop/Tenant_Ref/Tenant_Ref/src/components/Preview/index.jsx":"7","/Users/godfrey/Desktop/Tenant_Ref/Tenant_Ref/src/components/FormBuilder/constants.js":"8","/Users/godfrey/Desktop/Tenant_Ref/Tenant_Ref/src/components/FormBuilder/elements/index.jsx":"9","/Users/godfrey/Desktop/Tenant_Ref/Tenant_Ref/src/utils/authUtils.js":"10","/Users/godfrey/Desktop/Tenant_Ref/Tenant_Ref/src/components/FormBuilder/Header.jsx":"11","/Users/godfrey/Desktop/Tenant_Ref/Tenant_Ref/src/components/FormBuilder/elements/TextField.jsx":"12","/Users/godfrey/Desktop/Tenant_Ref/Tenant_Ref/src/components/FormBuilder/elements/TextArea.jsx":"13","/Users/godfrey/Desktop/Tenant_Ref/Tenant_Ref/src/components/FormBuilder/elements/NumberInput.jsx":"14","/Users/godfrey/Desktop/Tenant_Ref/Tenant_Ref/src/components/FormBuilder/elements/RadioInput.jsx":"15","/Users/godfrey/Desktop/Tenant_Ref/Tenant_Ref/src/components/FormBuilder/elements/TimeInput.jsx":"16","/Users/godfrey/Desktop/Tenant_Ref/Tenant_Ref/src/components/FormBuilder/elements/DateInput.jsx":"17","/Users/godfrey/Desktop/Tenant_Ref/Tenant_Ref/src/components/FormBuilder/elements/layout/index.jsx":"18"},{"size":197,"mtime":1702911879439,"results":"19","hashOfConfig":"20"},{"size":1062,"mtime":1702914830607,"results":"21","hashOfConfig":"20"},{"size":5081,"mtime":1702571235345,"results":"22","hashOfConfig":"20"},{"size":9032,"mtime":1702571235344,"results":"23","hashOfConfig":"20"},{"size":3426,"mtime":1702571235344,"results":"24","hashOfConfig":"20"},{"size":2296,"mtime":1702571235344,"results":"25","hashOfConfig":"20"},{"size":2457,"mtime":1702571235344,"results":"26","hashOfConfig":"20"},{"size":322,"mtime":1702571235343,"results":"27","hashOfConfig":"20"},{"size":345,"mtime":1702571235344,"results":"28","hashOfConfig":"20"},{"size":1180,"mtime":1702571235345,"results":"29","hashOfConfig":"20"},{"size":1051,"mtime":1702571235343,"results":"30","hashOfConfig":"20"},{"size":3922,"mtime":1702571235344,"results":"31","hashOfConfig":"20"},{"size":3972,"mtime":1702571235344,"results":"32","hashOfConfig":"20"},{"size":3953,"mtime":1702571235344,"results":"33","hashOfConfig":"20"},{"size":5295,"mtime":1702571235344,"results":"34","hashOfConfig":"20"},{"size":4316,"mtime":1702571235344,"results":"35","hashOfConfig":"20"},{"size":4320,"mtime":1702571235343,"results":"36","hashOfConfig":"20"},{"size":3391,"mtime":1702571235344,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"65ad2q",{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/godfrey/Desktop/Tenant_Ref/Tenant_Ref/src/index.js",[],"/Users/godfrey/Desktop/Tenant_Ref/Tenant_Ref/src/App.js",[],"/Users/godfrey/Desktop/Tenant_Ref/Tenant_Ref/src/components/SendEmail/SendEmailPage.jsx",["80"],"import React, { useState, useRef } from 'react';\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport TextField from \"@material-ui/core/TextField\";\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nconst SendEmailPage = () => {\n    const [email, setEmail] = useState('');\n    const [subject, setSubject] = useState('Tenant Reference Form');\n    const [message, setMessage] = useState('');\n    const [template, setTemplate] = useState('');\n    \n    const previewPageLink = 'http://localhost:3000/preview'; // Change this based on your actual deployment\n\n    const templates = {\n        default: 'Dear [Landlord/Employer],\\n\\nPlease fill out the attached reference form. You can access it through the following link:\\n' + previewPageLink + '\\n\\nThank you for your cooperation.',\n        // Add more templates as needed\n    };\n\n    const handleTemplateChange = (event) => {\n        setTemplate(event.target.value);\n        setMessage(templates[event.target.value] || '');\n    };\n\n    const handleSubmit = () => {\n        // Handle email sending logic here\n        console.log('Email:', email);\n        console.log('Subject:', subject);\n        console.log('Message:', message);\n    };\n\n    const insertLink = () => {\n        setMessage((prevMessage) => {\n            const cursorPos = textareaRef.current.selectionStart;\n            const newMessage =\n                prevMessage.substring(0, cursorPos) +\n                previewPageLink +\n                prevMessage.substring(cursorPos);\n            return newMessage;\n        });\n    };\n    \n    const textareaRef = useRef();\n\n    return (\n        <Grid container direction=\"column\" spacing={1} style={{ minHeight: '100vh' }}>\n            {/* Navbar */}\n            <AppBar position=\"static\" color=\"default\">\n                <Toolbar>\n                    <Grid container justifyContent=\"center\">\n                        <Grid item>\n                            <Typography variant=\"h6\">\n                                Tenant Reference - Send Email\n                            </Typography>\n                        </Grid>\n                    </Grid>\n                </Toolbar>\n            </AppBar>\n\n            {/* Content */}\n            <Box mt={3}>\n                <Grid container direction=\"row\" justifyContent=\"center\">\n                    <Grid item md={6}>\n                        <TextField\n                            fullWidth\n                            label=\"Recipient's Email\"\n                            value={email}\n                            onChange={(e) => setEmail(e.target.value)}\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                        />\n                        <TextField\n                            fullWidth\n                            label=\"Subject\"\n                            value={subject}\n                            onChange={(e) => setSubject(e.target.value)}\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                        />\n                        <FormControl fullWidth variant=\"outlined\" margin=\"normal\">\n                            <InputLabel id=\"template-select-label\">Template</InputLabel>\n                            <Select\n                                labelId=\"template-select-label\"\n                                id=\"template-select\"\n                                value={template}\n                                onChange={handleTemplateChange}\n                                label=\"Template\"\n                            >\n                                <MenuItem value=\"default\">Default Template</MenuItem>\n                                {/* Add more templates as MenuItem components */}\n                            </Select>\n                        </FormControl>\n                        <TextareaAutosize\n                            rowsMin={8}\n                            placeholder=\"Message Content\"\n                            value={message}\n                            onChange={(e) => setMessage(e.target.value)}\n                            style={{ width: '100%', padding: '10px', marginTop: '10px' }}\n                        />\n                    </Grid>\n                </Grid>\n            </Box>\n\n            {/* Send Button */}\n            <Grid item container justifyContent=\"center\" spacing={2}>\n                <Grid item>\n                    <Button variant=\"contained\" color=\"primary\" onClick={handleSubmit}>\n                        Send Email\n                    </Button>\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default SendEmailPage;\n","/Users/godfrey/Desktop/Tenant_Ref/Tenant_Ref/src/components/FormBuilder/index.jsx",["81","82","83","84","85","86","87","88","89","90","91","92"],"import { Fragment, useState } from \"react\";\nimport uuid from \"react-uuid\";\nimport Nestable from \"react-nestable\";\n//Material UI Components\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Button from \"@material-ui/core/Button\";\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n//Icons\nimport AddCircleOutlineOutlinedIcon from \"@material-ui/icons/AddCircleOutlineOutlined\";\n//Form Elements\nimport {\n  TextFieldInput,\n  TextArea,\n  NumberInput,\n  RadioInput,\n  DateInput,\n  TimeInput,\n} from \"./elements\";\nimport Layout from './elements/layout'\nimport { formEl } from \"./constants.js\";\n//Components\nimport Header from \"./Header\";\nimport { useNavigate } from 'react-router-dom';\n\nconst FormBuilder = () => {\n  const navigate = useNavigate();\n  const initVal = formEl[0]?.value;\n\n  //State\n  const [title, setTitle] = useState(\"New reference form\");\n  const [description, setDescription] = useState(\"\");\n  const [data, setData] = useState([]);\n  const [formData, setFormData] = useState(\"text\");\n\n  const items = data;\n\n  //Function to add new element\n  const addElement = () => {\n    const data = {\n      id: uuid(),\n      value: null,\n      type: formData,\n      required: false,\n    };\n    setData((prevState) => [...prevState, data]);\n    setFormData(initVal);\n  };\n\n  //Function to delete element\n  const deleteEl = (id) => {\n    setData((prevState) => prevState.filter((val) => val.id !== id));\n  };\n\n  //Function to add element at specific pos and return arr\n  const addAfter = (elArray, index, newEl) => {\n    return [...elArray.slice(0, index+1), newEl, ...elArray.slice(index+1)];\n  };\n\n  //Function to duplicate element\n  const duplicateElement = (elId, elType) => {\n    let elIdx = data.findIndex( (el) =>el.id === elId);\n    let newEl = {\n      id: uuid(),\n      value: null,\n      type: elType,\n      required: false,\n    }\n    let newArr = addAfter(data,elIdx,newEl)\n    setData(newArr)\n  };\n\n  //Function to handle sorting of elements\n  const handleOnChangeSort = ({ items }) => {\n    setData(items);\n  };\n\n  //Function to Handle Input Values\n  const handleValue = (id, e) => {\n    let newArr = data.map((el) => {\n      if (el.id == id) {\n        return { ...el, value: e.target.value };\n      } else {\n        return el;\n      }\n    });\n    setData(newArr);\n  };\n\n  //Function to Handle Required\n  const handleRequired = (id) => {\n    let newArr = data.map((el) => {\n      if (el.id == id) {\n        return { ...el, required: !el.required };\n      } else {\n        return el;\n      }\n    });\n    setData(newArr);\n  };\n\n  //Function to Handle Element Type\n  const handleElType = (id, type) => {\n    let newArr = data.map((el) => {\n      if (el.id == id) {\n        return { ...el, type: type };\n      } else {\n        return el;\n      }\n    });\n    setData(newArr);\n  };\n\n  //Function to Handle Options\n  const addOption = (id, newOption) => {\n    let newArr = data.map((el) => {\n      if (el.id == id) {\n        const objVal = \"options\" in el ? el?.options : [];\n        return { ...el, options: [...objVal, newOption] };\n      } else {\n        return el;\n      }\n    });\n    setData(newArr);\n  };\n\n  //Function to Handle Date\n  const handleDate = (id, dateVal) => {\n    let newArr = data.map((el) => {\n      if (el.id == id) {\n        return { ...el, date: dateVal };\n      } else {\n        return el;\n      }\n    });\n    setData(newArr);\n  };\n\n  //Function to Handle Time\n  const handleTime = (id, dateVal) => {\n    let newArr = data.map((el) => {\n      if (el.id == id) {\n        return { ...el, time: dateVal };\n      } else {\n        return el;\n      }\n    });\n    setData(newArr);\n  };\n\n  //Function to Change Option Values\n  const handleOptionValues = (elId, optionId, optionVal) => {\n    let newArr = data.map((el) => {\n      if (el.id == elId) {\n        el?.options &&\n          el?.options.map((opt) => {\n            if (opt.id == optionId) {\n              opt.value = optionVal;\n            }\n          });\n        return el;\n      } else {\n        return el;\n      }\n    });\n    setData(newArr);\n  };\n\n  //Function to Delete Optin\n  const deleteOption = (elId, optionId) => {\n    let newArr = data.map((el) => {\n      if (el.id == elId) {\n        let newOptions =\n          el?.options && el?.options.filter((opt) => opt.id != optionId);\n        return { ...el, options: newOptions };\n      } else {\n        return el;\n      }\n    });\n    setData(newArr);\n  };\n\n   //Function to handle submission\n   const handleSubmit = () => {\n    navigate('/preview', { state: { formData: data } });\n};\n\n\n  //Render items\n  const renderElements = ({ item }) => {\n    switch (item.type) {\n      case \"text\":\n        return (\n          <TextFieldInput\n            item={item}\n            handleValue={handleValue}\n            deleteEl={deleteEl}\n            handleRequired={handleRequired}\n            handleElType={handleElType}\n            duplicateElement={duplicateElement}\n          />\n        );\n      case \"textarea\":\n        return (\n          <TextArea\n            item={item}\n            handleValue={handleValue}\n            deleteEl={deleteEl}\n            handleRequired={handleRequired}\n            handleElType={handleElType}\n            duplicateElement={duplicateElement}\n          />\n        );\n      case \"number\":\n        return (\n          <NumberInput\n            item={item}\n            handleValue={handleValue}\n            deleteEl={deleteEl}\n            handleRequired={handleRequired}\n            handleElType={handleElType}\n            duplicateElement={duplicateElement}\n          />\n        );\n      case \"radio\":\n        return (\n          <RadioInput\n            item={item}\n            handleValue={handleValue}\n            deleteEl={deleteEl}\n            handleRequired={handleRequired}\n            handleElType={handleElType}\n            addOption={addOption}\n            handleOptionValues={handleOptionValues}\n            deleteOption={deleteOption}\n            duplicateElement={duplicateElement}\n          />\n        );\n      case \"date\":\n        return (\n          <DateInput\n            item={item}\n            handleValue={handleValue}\n            deleteEl={deleteEl}\n            handleRequired={handleRequired}\n            handleElType={handleElType}\n            handleDate={handleDate}\n            duplicateElement={duplicateElement}\n          />\n        );\n      case \"time\":\n        return (\n          <TimeInput\n            item={item}\n            handleValue={handleValue}\n            deleteEl={deleteEl}\n            handleRequired={handleRequired}\n            handleElType={handleElType}\n            handleTime={handleTime}\n            duplicateElement={duplicateElement}\n          />\n        );\n      default:\n        return <Fragment></Fragment>;\n    }\n  };\n\n  console.log(data);\n  \n  return (\n    <Fragment>\n      {/* Navbar */}\n      <AppBar position=\"static\" color=\"default\">\n              <Toolbar>\n                <Grid container justifyContent=\"center\">\n                  <Grid item>\n                    <Typography variant=\"h6\">\n                      Tenant Reference - Form Builder\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </Toolbar>\n            </AppBar>\n\n            <Box mt={3}>\n        <Grid container spacing={1} direction=\"column\" style={{ minHeight: '100vh' }}>\n          \n          {/* Your main content */}\n          <Grid item container direction=\"row\" justifyContent=\"center\" flex={1}>\n            <Grid item md={6}>\n              <Header\n                title={title}\n                setTitle={setTitle}\n                description={description}\n                setDescription={setDescription}\n              />\n              <Nestable\n                items={items}\n                renderItem={renderElements}\n                maxDepth={1}\n                onChange={handleOnChangeSort}\n              />\n            </Grid>\n            <Grid item md={1}>\n              <Tooltip title=\"Add Element\" aria-label=\"add-element\">\n                <IconButton\n                  aria-label=\"add-element\"\n                  onClick={addElement}\n                  sx={{ position: \"sticky\", top: 30 }}\n                >\n                  <AddCircleOutlineOutlinedIcon color=\"secondary\" />\n                </IconButton>\n              </Tooltip>\n            </Grid>\n          </Grid>\n          \n          {/* Your button */}\n          <Grid item container justifyContent=\"center\">\n            <Grid item md={1}>\n              <Tooltip title=\"Submit\" aria-label=\"submit\">\n                <Button variant=\"contained\" color=\"secondary\" onClick={handleSubmit}>\n                  Submit\n                </Button>\n              </Tooltip>\n            </Grid>\n          </Grid>\n          \n        </Grid>\n      </Box>\n\n    </Fragment>\n  );\n  \n};\nexport default FormBuilder;\n","/Users/godfrey/Desktop/Tenant_Ref/Tenant_Ref/src/components/Register/index.jsx",["93","94","95"],"import React, { useState } from 'react';\n// import { Link } from 'react-router-dom';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { useHistory } from 'react-router-dom';\nimport { Link, useNavigate } from 'react-router-dom';\n\nconst Register = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [registeredUsers, setRegisteredUsers] = useState([]);\n  const navigate = useNavigate();\n  \n\n  const handleRegister = () => {\n    if (password !== confirmPassword) {\n      console.error('Passwords do not match');\n      return;\n    }\n  \n    const newUser = { email, password };\n  \n    // Retrieve existing users from localStorage\n    const existingUsers = JSON.parse(localStorage.getItem('registeredUsers')) || [];\n  \n    // Check if the user already exists\n    if (existingUsers.some(user => user.email === newUser.email)) {\n      console.error('User already exists');\n      return;\n    }\n  \n    // Add the new user\n    const updatedUsers = [...existingUsers, newUser];\n    localStorage.setItem('registeredUsers', JSON.stringify(updatedUsers));\n  \n    console.log('Registration successful');\n    navigate('/');\n  };\n  \n\n  return (\n    <Grid container direction=\"column\" spacing={1} style={{ minHeight: '100vh' }}>\n      {/* Navbar */}\n      <AppBar position=\"static\" color=\"default\">\n        <Toolbar>\n          <Grid container justifyContent=\"center\">\n            <Grid item>\n              <Typography variant=\"h6\">\n                Tenant_ID - Register\n              </Typography>\n            </Grid>\n          </Grid>\n        </Toolbar>\n      </AppBar>\n\n      <Grid item container justifyContent=\"center\" alignItems=\"center\" style={{ marginTop: '1rem' }}>\n        <Grid item xs={10} sm={8} md={6} lg={4}>\n          <Typography variant=\"subtitle1\" paragraph>\n            Welcome To Simplified Tenant Management\n          </Typography>\n          <form>\n            <TextField\n              label=\"Email\"\n              variant=\"outlined\"\n              fullWidth\n              margin=\"normal\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n            <TextField\n              label=\"Password\"\n              variant=\"outlined\"\n              fullWidth\n              margin=\"normal\"\n              type=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n            <TextField\n              label=\"Confirm Password\"\n              variant=\"outlined\"\n              fullWidth\n              margin=\"normal\"\n              type=\"password\"\n              value={confirmPassword}\n              onChange={(e) => setConfirmPassword(e.target.value)}\n            />\n            <Button variant=\"contained\" color=\"primary\" fullWidth onClick={handleRegister}>\n              Get Started\n            </Button>\n          </form>\n          <Typography variant=\"body2\" style={{ marginTop: '1rem' }}>\n            Already exploring? <Link to=\"/login\">Login here</Link>\n          </Typography>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Register;\n","/Users/godfrey/Desktop/Tenant_Ref/Tenant_Ref/src/components/Login/index.jsx",["96"],"// Login/index.jsx\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { loginUser } from '../../utils/authUtils';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\n\nconst Login = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleLogin = () => {\n    // Add your login logic here\n    console.log('Login clicked');\n  };\n\n  return (\n    <Grid container direction=\"column\" spacing={1} style={{ minHeight: '100vh' }}>\n      {/* Navbar */}\n      <AppBar position=\"static\" color=\"default\">\n        <Toolbar>\n          <Grid container justifyContent=\"center\">\n            <Grid item>\n              <Typography variant=\"h6\">\n                Tenant_ID - Login\n              </Typography>\n            </Grid>\n          </Grid>\n        </Toolbar>\n      </AppBar>\n\n      <Grid container justifyContent=\"center\" alignItems=\"center\" style={{ marginTop: '1rem' }}>\n        <Grid item xs={10} sm={8} md={6} lg={4}>\n          <Typography variant=\"subtitle1\" paragraph>\n            Welcome To Simplified Tenant Management\n          </Typography>\n          <form>\n            <TextField\n              label=\"Email\"\n              variant=\"outlined\"\n              fullWidth\n              margin=\"normal\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n            <TextField\n              label=\"Password\"\n              variant=\"outlined\"\n              fullWidth\n              margin=\"normal\"\n              type=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n            <Button variant=\"contained\" color=\"primary\" fullWidth onClick={handleLogin}>\n              Login\n            </Button>\n          </form>\n          <Typography variant=\"body2\" style={{ marginTop: '1rem' }}>\n            Don't have an account? <Link to=\"/register\">Register here</Link>\n          </Typography>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Login;\n","/Users/godfrey/Desktop/Tenant_Ref/Tenant_Ref/src/components/Preview/index.jsx",[],"/Users/godfrey/Desktop/Tenant_Ref/Tenant_Ref/src/components/FormBuilder/constants.js",[],"/Users/godfrey/Desktop/Tenant_Ref/Tenant_Ref/src/components/FormBuilder/elements/index.jsx",[],"/Users/godfrey/Desktop/Tenant_Ref/Tenant_Ref/src/utils/authUtils.js",[],"/Users/godfrey/Desktop/Tenant_Ref/Tenant_Ref/src/components/FormBuilder/Header.jsx",["97"],"import { Fragment, useState } from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst Header = ({ title, description, setTitle, setDescription }) => {\n  return (\n    <Fragment>\n      <Box sx={{ mb: 3 }}>\n        <Paper elevation={2} sx={{ p: 3, borderTop: \"8px solid white\" }}>\n          <TextField\n            defaultValue={title}\n            onBlur={(e) => setTitle(e.target.value)}\n            variant=\"standard\"\n            placeholder=\"Tenant Ref\"\n            name=\"title\"\n            sx={{ mb: 3 }}\n            fullWidth\n          />\n          <TextField\n            name=\"description\"\n            defaultValue={description}\n            onBlur={(e) => setDescription(e.target.value)}\n            variant=\"standard\"\n            placeholder=\"Form Description\"\n            fullWidth\n            sx={{ mb: 2 }}\n            multiline\n            rows={2}\n          />\n        </Paper>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Header;\n","/Users/godfrey/Desktop/Tenant_Ref/Tenant_Ref/src/components/FormBuilder/elements/TextField.jsx",["98"],"import { useState, Fragment } from \"react\";\n//Material UI Components\nimport TextField from \"@material-ui/core/TextField\";\nimport Box from \"@material-ui/core/Box\";\nimport Paper from \"@material-ui/core/Paper\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Grid from \"@material-ui/core/Grid\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\n//Icons\nimport DragIndicatorIcon from \"@material-ui/icons/DragIndicator\";\nimport DeleteOutlineOutlinedIcon from \"@material-ui/icons/DeleteOutlineOutlined\";\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\n\n//Form Elements\nimport { formEl } from \"../constants\";\n\nconst TextFieldInput = ({ item, handleValue, deleteEl, handleRequired, handleElType,duplicateElement }) => {\n  return (\n    <Fragment>\n      <Paper elevation={1}>\n        <Box sx={{ textAlign: \"center\" }}>\n          <DragIndicatorIcon\n            sx={{ transform: \"rotate(-90deg)\", cursor: \"all-scroll\" }}\n          />\n        </Box>\n        <Box sx={{ p: 3 }}>\n          <Grid container spacing={1}>\n            <Grid item xs={9}>\n              <TextField\n                value={item.value}\n                variant=\"outlined\"\n                onChange={(e) => handleValue(item.id, e)}\n                fullWidth\n                required={item.required}\n                placeholder=\"Textfield Label\"\n                sx={{ mb: 2 }}\n              />\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                placeholder=\"Textfield Input Field\"\n                disabled\n              />\n            </Grid>\n            <Grid item xs={3}>\n              <FormControl fullWidth>\n                <InputLabel id=\"el-type-label\">Type</InputLabel>\n                <Select\n                  labelId=\"el-type-label\"\n                  id=\"el-type\"\n                  label=\"Type\"\n                  value={item.type}\n                  onChange={(e)=>handleElType(item.id,e.target.value)}\n                >\n                  {formEl &&\n                    formEl.map((el, key) => (\n                      <MenuItem key={key} value={el.value}>\n                        {el.label}\n                      </MenuItem>\n                    ))}\n                </Select>\n              </FormControl>\n            </Grid>\n          </Grid>\n        </Box>\n        <Divider light />\n        <FormGroup row sx={{ alignItems: \"center\" }}>\n          <Tooltip title=\"Delete Element\" aria-label=\"delete-element\">\n            <IconButton\n              aria-label=\"delete-element\"\n              onClick={() => deleteEl(item.id)}\n              sx={{ ml: 2 }}\n            >\n              <DeleteOutlineOutlinedIcon color=\"secondary\" />\n            </IconButton>\n          </Tooltip>\n          <Tooltip title=\"Duplicate Element\" aria-label=\"duplicate-element\">\n            <IconButton\n              aria-label=\"duplicate-element\"\n              onClick={() => duplicateElement(item.id, item.type)}\n              sx={{ ml: 2 }}\n            >\n              <FileCopyIcon color=\"secondary\" />\n            </IconButton>\n          </Tooltip>\n\n          <FormControlLabel\n            control={\n              <Switch\n                checked={item.required}\n                onChange={() => handleRequired(item.id)}\n                name=\"required-field\"\n                color=\"secondary\"\n              />\n            }\n            label=\"Required\"\n            sx={{ ml: 2 }}\n          />\n        </FormGroup>\n      </Paper>\n    </Fragment>\n  );\n};\n\nexport default TextFieldInput;\n","/Users/godfrey/Desktop/Tenant_Ref/Tenant_Ref/src/components/FormBuilder/elements/TextArea.jsx",[],"/Users/godfrey/Desktop/Tenant_Ref/Tenant_Ref/src/components/FormBuilder/elements/NumberInput.jsx",[],"/Users/godfrey/Desktop/Tenant_Ref/Tenant_Ref/src/components/FormBuilder/elements/RadioInput.jsx",[],"/Users/godfrey/Desktop/Tenant_Ref/Tenant_Ref/src/components/FormBuilder/elements/TimeInput.jsx",[],"/Users/godfrey/Desktop/Tenant_Ref/Tenant_Ref/src/components/FormBuilder/elements/DateInput.jsx",[],"/Users/godfrey/Desktop/Tenant_Ref/Tenant_Ref/src/components/FormBuilder/elements/layout/index.jsx",[],{"ruleId":"99","severity":1,"message":"100","line":40,"column":11,"nodeType":"101","messageId":"102","endLine":40,"endColumn":21},{"ruleId":"99","severity":1,"message":"103","line":24,"column":8,"nodeType":"101","messageId":"102","endLine":24,"endColumn":14},{"ruleId":"104","severity":1,"message":"105","line":85,"column":17,"nodeType":"106","messageId":"107","endLine":85,"endColumn":19},{"ruleId":"104","severity":1,"message":"105","line":97,"column":17,"nodeType":"106","messageId":"107","endLine":97,"endColumn":19},{"ruleId":"104","severity":1,"message":"105","line":109,"column":17,"nodeType":"106","messageId":"107","endLine":109,"endColumn":19},{"ruleId":"104","severity":1,"message":"105","line":121,"column":17,"nodeType":"106","messageId":"107","endLine":121,"endColumn":19},{"ruleId":"104","severity":1,"message":"105","line":134,"column":17,"nodeType":"106","messageId":"107","endLine":134,"endColumn":19},{"ruleId":"104","severity":1,"message":"105","line":146,"column":17,"nodeType":"106","messageId":"107","endLine":146,"endColumn":19},{"ruleId":"104","severity":1,"message":"105","line":158,"column":17,"nodeType":"106","messageId":"107","endLine":158,"endColumn":19},{"ruleId":"108","severity":1,"message":"109","line":160,"column":33,"nodeType":"110","messageId":"111","endLine":160,"endColumn":35},{"ruleId":"104","severity":1,"message":"105","line":161,"column":24,"nodeType":"106","messageId":"107","endLine":161,"endColumn":26},{"ruleId":"104","severity":1,"message":"105","line":176,"column":17,"nodeType":"106","messageId":"107","endLine":176,"endColumn":19},{"ruleId":"104","severity":1,"message":"112","line":178,"column":61,"nodeType":"106","messageId":"107","endLine":178,"endColumn":63},{"ruleId":"99","severity":1,"message":"113","line":9,"column":10,"nodeType":"101","messageId":"102","endLine":9,"endColumn":20},{"ruleId":"99","severity":1,"message":"114","line":16,"column":10,"nodeType":"101","messageId":"102","endLine":16,"endColumn":25},{"ruleId":"99","severity":1,"message":"115","line":16,"column":27,"nodeType":"101","messageId":"102","endLine":16,"endColumn":45},{"ruleId":"99","severity":1,"message":"116","line":4,"column":10,"nodeType":"101","messageId":"102","endLine":4,"endColumn":19},{"ruleId":"99","severity":1,"message":"117","line":1,"column":20,"nodeType":"101","messageId":"102","endLine":1,"endColumn":28},{"ruleId":"99","severity":1,"message":"117","line":1,"column":10,"nodeType":"101","messageId":"102","endLine":1,"endColumn":18},"no-unused-vars","'insertLink' is assigned a value but never used.","Identifier","unusedVar","'Layout' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Expected '!==' and instead saw '!='.","'useHistory' is defined but never used.","'registeredUsers' is assigned a value but never used.","'setRegisteredUsers' is assigned a value but never used.","'loginUser' is defined but never used.","'useState' is defined but never used."]