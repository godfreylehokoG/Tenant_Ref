{"version":3,"sources":["components/FormBuilder/constants.js","components/FormBuilder/elements/TextArea.jsx","components/FormBuilder/elements/NumberInput.jsx","components/FormBuilder/elements/TextField.jsx","components/FormBuilder/elements/RadioInput.jsx","components/FormBuilder/elements/DateInput.jsx","components/FormBuilder/elements/TimeInput.jsx","components/FormBuilder/Header.jsx","components/FormBuilder/index.jsx","components/Preview/index.jsx","components/SendEmail/SendEmailPage.jsx","utils/authUtils.js","components/Login/index.jsx","components/Register/index.jsx","App.js","index.js"],"names":["formEl","label","value","TextArea","_ref","item","handleValue","deleteEl","handleRequired","handleElType","duplicateElement","_jsx","Fragment","children","_jsxs","Paper","elevation","Box","sx","textAlign","DragIndicatorIcon","transform","cursor","p","Grid","container","spacing","xs","TextField","defaultValue","variant","onBlur","e","id","fullWidth","required","placeholder","mb","disabled","multiline","rows","FormControl","InputLabel","Select","labelId","type","onChange","target","map","el","key","MenuItem","Divider","light","FormGroup","row","alignItems","Tooltip","title","IconButton","onClick","ml","DeleteOutlineOutlinedIcon","color","FileCopyIcon","FormControlLabel","control","Switch","checked","name","NumberInput","TextFieldInput","RadioInput","addOption","handleOptionValues","deleteOption","options","length","opt","display","concat","Button","console","log","data","uuid","createNewOption","DateInput","handleDate","LocalizationProvider","dateAdapter","AdapterDateFns","DatePicker","date","newDate","renderInput","params","TimeInput","handleTime","TimePicker","time","newTime","Header","description","setTitle","setDescription","borderTop","FormBuilder","_formEl$","navigate","useNavigate","initVal","useState","setData","formData","setFormData","items","prevState","filter","val","elId","elType","elIdx","findIndex","newEl","newArr","addAfter","elArray","index","slice","newOption","objVal","dateVal","optionId","optionVal","newOptions","AppBar","position","Toolbar","justifyContent","Typography","mt","direction","style","minHeight","flex","md","Nestable","renderItem","_ref2","maxDepth","addElement","top","AddCircleOutlineOutlinedIcon","handleSubmit","state","Preview","_location$state","location","useLocation","renderElements","handleSendEmail","SendEmailPage","email","setEmail","subject","setSubject","message","setMessage","template","setTemplate","previewPageLink","templates","default","useRef","margin","event","TextareaAutosize","rowsMin","width","padding","marginTop","require","Login","password","setPassword","sm","lg","paragraph","handleLogin","Link","to","Register","confirmPassword","setConfirmPassword","registeredUsers","setRegisteredUsers","handleRegister","error","newUser","existingUsers","JSON","parse","localStorage","getItem","some","user","updatedUsers","setItem","stringify","App","Router","basename","Routes","Route","exact","path","element","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6842e019.chunk.js","sourcesContent":["export const formEl = [\n  {\n    label: \"Text\",\n    value: \"text\",\n  },\n  {\n    label: \"TextArea\",\n    value: \"textarea\",\n  },\n  {\n    label: \"Number\",\n    value: \"number\",\n  },\n  {\n    label: \"Radio\",\n    value: \"radio\",\n  },\n  {\n    label: \"Date\",\n    value: \"date\",\n  },\n  {\n    label: \"Time\",\n    value: \"time\",\n  }\n];\n","import {  Fragment } from \"react\";\n//Material UI Components\nimport TextField from \"@material-ui/core/TextField\";\nimport Box from \"@material-ui/core/Box\";\nimport Paper from \"@material-ui/core/Paper\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Grid from \"@material-ui/core/Grid\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\n//Icons\nimport DragIndicatorIcon from \"@material-ui/icons/DragIndicator\";\nimport DeleteOutlineOutlinedIcon from \"@material-ui/icons/DeleteOutlineOutlined\";\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\n\n//Form Elements\nimport { formEl } from \"../constants\";\n\nconst TextArea = ({\n  item,\n  handleValue,\n  deleteEl,\n  handleRequired,\n  handleElType,\n  duplicateElement,\n}) => {\n  return (\n    <Fragment>\n      <Paper elevation={1}>\n        <Box sx={{ textAlign: \"center\" }}>\n          <DragIndicatorIcon\n            sx={{ transform: \"rotate(-90deg)\", cursor: \"all-scroll\" }}\n          />\n        </Box>\n        <Box sx={{ p: 3 }}>\n          <Grid container spacing={1}>\n            <Grid item xs={9}>\n              <TextField\n                defaultValue={item.value}\n                variant=\"outlined\"\n                onBlur={(e) => handleValue(item.id, e)}\n                fullWidth\n                required={item.required}\n                placeholder=\"Textarea Label\"\n                sx={{ mb: 2 }}\n              />\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                placeholder=\"TextareaIInput Field\"\n                disabled\n                multiline\n                rows={3}\n              />\n            </Grid>\n            <Grid item xs={3}>\n              <FormControl fullWidth>\n                <InputLabel id=\"el-type-label\">Type</InputLabel>\n                <Select\n                  labelId=\"el-type-label\"\n                  id=\"el-type\"\n                  label=\"Type\"\n                  value={item.type}\n                  onChange={(e) => handleElType(item.id, e.target.value)}\n                >\n                  {formEl &&\n                    formEl.map((el, key) => (\n                      <MenuItem key={key} value={el.value}>\n                        {el.label}\n                      </MenuItem>\n                    ))}\n                </Select>\n              </FormControl>\n            </Grid>\n          </Grid>\n        </Box>\n        <Divider light />\n        <FormGroup row sx={{ alignItems: \"center\" }}>\n          <Tooltip title=\"Delete Element\" aria-label=\"delete-element\">\n            <IconButton\n              aria-label=\"delete-element\"\n              onClick={() => deleteEl(item.id)}\n              sx={{ ml: 2 }}\n            >\n              <DeleteOutlineOutlinedIcon color=\"secondary\" />\n            </IconButton>\n          </Tooltip>\n          <Tooltip title=\"Duplicate Element\" aria-label=\"duplicate-element\">\n            <IconButton\n              aria-label=\"duplicate-element\"\n              onClick={() => duplicateElement(item.id, item.type)}\n              sx={{ ml: 2 }}\n            >\n              <FileCopyIcon color=\"secondary\" />\n            </IconButton>\n          </Tooltip>\n\n          <FormControlLabel\n            control={\n              <Switch\n                checked={item.required}\n                onChange={() => handleRequired(item.id)}\n                name=\"required-field\"\n                color=\"secondary\"\n              />\n            }\n            label=\"Required\"\n            sx={{ ml: 2 }}\n          />\n        </FormGroup>\n      </Paper>\n    </Fragment>\n  );\n};\n\nexport default TextArea;\n","import {  Fragment } from \"react\";\n//Material UI Components\nimport TextField from \"@material-ui/core/TextField\";\nimport Box from \"@material-ui/core/Box\";\nimport Paper from \"@material-ui/core/Paper\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Grid from \"@material-ui/core/Grid\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\n//Icons\nimport DragIndicatorIcon from \"@material-ui/icons/DragIndicator\";\nimport DeleteOutlineOutlinedIcon from \"@material-ui/icons/DeleteOutlineOutlined\";\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\n\n//Form Elements\nimport { formEl } from \"../constants\";\n\nconst NumberInput = ({\n  item,\n  handleValue,\n  deleteEl,\n  handleRequired,\n  handleElType,\n  duplicateElement,\n}) => {\n  return (\n    <Fragment>\n      <Paper elevation={1}>\n        <Box sx={{ textAlign: \"center\" }}>\n          <DragIndicatorIcon\n            sx={{ transform: \"rotate(-90deg)\", cursor: \"all-scroll\" }}\n          />\n        </Box>\n        <Box sx={{ p: 3 }}>\n          <Grid container spacing={1}>\n            <Grid item xs={9}>\n              <TextField\n                defaultValue={item.value}\n                variant=\"outlined\"\n                onBlur={(e) => handleValue(item.id, e)}\n                fullWidth\n                required={item.required}\n                placeholder=\"Number Label\"\n                sx={{ mb: 2 }}\n              />\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                placeholder=\"Number Input Field\"\n                disabled\n                type=\"number\"\n              />\n            </Grid>\n            <Grid item xs={3}>\n              <FormControl fullWidth>\n                <InputLabel id=\"el-type-label\">Type</InputLabel>\n                <Select\n                  labelId=\"el-type-label\"\n                  id=\"el-type\"\n                  label=\"Type\"\n                  value={item.type}\n                  onChange={(e) => handleElType(item.id, e.target.value)}\n                >\n                  {formEl &&\n                    formEl.map((el, key) => (\n                      <MenuItem key={key} value={el.value}>\n                        {el.label}\n                      </MenuItem>\n                    ))}\n                </Select>\n              </FormControl>\n            </Grid>\n          </Grid>\n        </Box>\n        <Divider light />\n        <FormGroup row sx={{ alignItems: \"center\" }}>\n          <Tooltip title=\"Delete Element\" aria-label=\"delete-element\">\n            <IconButton\n              aria-label=\"delete-element\"\n              onClick={() => deleteEl(item.id)}\n              sx={{ ml: 2 }}\n            >\n              <DeleteOutlineOutlinedIcon color=\"secondary\" />\n            </IconButton>\n          </Tooltip>\n          <Tooltip title=\"Duplicate Element\" aria-label=\"duplicate-element\">\n            <IconButton\n              aria-label=\"duplicate-element\"\n              onClick={() => duplicateElement(item.id, item.type)}\n              sx={{ ml: 2 }}\n            >\n              <FileCopyIcon color=\"secondary\" />\n            </IconButton>\n          </Tooltip>\n\n          <FormControlLabel\n            control={\n              <Switch\n                checked={item.required}\n                onChange={() => handleRequired(item.id)}\n                name=\"required-field\"\n                color=\"secondary\"\n              />\n            }\n            label=\"Required\"\n            sx={{ ml: 2 }}\n          />\n        </FormGroup>\n      </Paper>\n    </Fragment>\n  );\n};\n\nexport default NumberInput;\n","import { useState, Fragment } from \"react\";\n//Material UI Components\nimport TextField from \"@material-ui/core/TextField\";\nimport Box from \"@material-ui/core/Box\";\nimport Paper from \"@material-ui/core/Paper\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Grid from \"@material-ui/core/Grid\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\n//Icons\nimport DragIndicatorIcon from \"@material-ui/icons/DragIndicator\";\nimport DeleteOutlineOutlinedIcon from \"@material-ui/icons/DeleteOutlineOutlined\";\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\n\n//Form Elements\nimport { formEl } from \"../constants\";\n\nconst TextFieldInput = ({ item, handleValue, deleteEl, handleRequired, handleElType,duplicateElement }) => {\n  return (\n    <Fragment>\n      <Paper elevation={1}>\n        <Box sx={{ textAlign: \"center\" }}>\n          <DragIndicatorIcon\n            sx={{ transform: \"rotate(-90deg)\", cursor: \"all-scroll\" }}\n          />\n        </Box>\n        <Box sx={{ p: 3 }}>\n          <Grid container spacing={1}>\n            <Grid item xs={9}>\n              <TextField\n                value={item.value}\n                variant=\"outlined\"\n                onChange={(e) => handleValue(item.id, e)}\n                fullWidth\n                required={item.required}\n                placeholder=\"Textfield Label\"\n                sx={{ mb: 2 }}\n              />\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                placeholder=\"Textfield Input Field\"\n                disabled\n              />\n            </Grid>\n            <Grid item xs={3}>\n              <FormControl fullWidth>\n                <InputLabel id=\"el-type-label\">Type</InputLabel>\n                <Select\n                  labelId=\"el-type-label\"\n                  id=\"el-type\"\n                  label=\"Type\"\n                  value={item.type}\n                  onChange={(e)=>handleElType(item.id,e.target.value)}\n                >\n                  {formEl &&\n                    formEl.map((el, key) => (\n                      <MenuItem key={key} value={el.value}>\n                        {el.label}\n                      </MenuItem>\n                    ))}\n                </Select>\n              </FormControl>\n            </Grid>\n          </Grid>\n        </Box>\n        <Divider light />\n        <FormGroup row sx={{ alignItems: \"center\" }}>\n          <Tooltip title=\"Delete Element\" aria-label=\"delete-element\">\n            <IconButton\n              aria-label=\"delete-element\"\n              onClick={() => deleteEl(item.id)}\n              sx={{ ml: 2 }}\n            >\n              <DeleteOutlineOutlinedIcon color=\"secondary\" />\n            </IconButton>\n          </Tooltip>\n          <Tooltip title=\"Duplicate Element\" aria-label=\"duplicate-element\">\n            <IconButton\n              aria-label=\"duplicate-element\"\n              onClick={() => duplicateElement(item.id, item.type)}\n              sx={{ ml: 2 }}\n            >\n              <FileCopyIcon color=\"secondary\" />\n            </IconButton>\n          </Tooltip>\n\n          <FormControlLabel\n            control={\n              <Switch\n                checked={item.required}\n                onChange={() => handleRequired(item.id)}\n                name=\"required-field\"\n                color=\"secondary\"\n              />\n            }\n            label=\"Required\"\n            sx={{ ml: 2 }}\n          />\n        </FormGroup>\n      </Paper>\n    </Fragment>\n  );\n};\n\nexport default TextFieldInput;\n","import {  Fragment } from \"react\";\nimport uuid from \"react-uuid\";\n//Material UI Components\nimport TextField from \"@material-ui/core/TextField\";\nimport Box from \"@material-ui/core/Box\";\nimport Paper from \"@material-ui/core/Paper\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Grid from \"@material-ui/core/Grid\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Button from \"@material-ui/core/Button\";\n\n//Icons\nimport DragIndicatorIcon from \"@material-ui/icons/DragIndicator\";\nimport DeleteOutlineOutlinedIcon from \"@material-ui/icons/DeleteOutlineOutlined\";\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\n\n//Form Elements\nimport { formEl } from \"../constants\";\n\nconst RadioInput = ({\n  item,\n  handleValue,\n  deleteEl,\n  handleRequired,\n  handleElType,\n  addOption,\n  handleOptionValues,\n  deleteOption,\n  duplicateElement\n}) => {\n\n  //Create new option\n  const createNewOption = (id) => {\n    console.log(id,typeof(id),\"this is id\")\n    const data = {\n      id: uuid(),\n      value: \"\",\n    };\n    addOption(id, data);\n  };\n\n  return (\n    <Fragment>\n      <Paper elevation={1}>\n        <Box sx={{ textAlign: \"center\" }}>\n          <DragIndicatorIcon\n            sx={{ transform: \"rotate(-90deg)\", cursor: \"all-scroll\" }}\n          />\n        </Box>\n        <Box sx={{ p: 3 }}>\n          <Grid container spacing={1}>\n            <Grid item xs={9}>\n              <TextField\n                defaultValue={item.value}\n                variant=\"outlined\"\n                onBlur={(e) => handleValue(item.id, e)}\n                fullWidth\n                required={item.required}\n                placeholder=\"Radio Label\"\n                sx={{ mb: 2 }}\n              />\n              {item.options &&\n                item.options.length > 0 &&\n                item.options.map((opt, key) => (\n                  <Box sx={{display:'flex'}}>\n                    <TextField\n                      variant=\"outlined\"\n                      fullWidth\n                      placeholder={`Radio Option ${key + 1}`}\n                      defaultValue={opt?.value}\n                      key={opt?.id}\n                      sx={{ mb: 1 }}\n                      onBlur={(e) =>\n                        handleOptionValues(item?.id, opt?.id, e.target.value)\n                      }\n                    />\n                    <Tooltip title=\"Delete Option\" aria-label=\"delete-option\">\n                      <IconButton\n                        aria-label=\"delete-option\"\n                        onClick={() => deleteOption(item.id,opt?.id)}\n                        sx={{ ml: 2 }}\n                      >\n                        <DeleteOutlineOutlinedIcon color=\"secondary\" />\n                      </IconButton>\n                    </Tooltip>\n                  </Box>\n                ))}\n              <Button variant=\"text\" onClick={() => createNewOption(item.id)}>\n                Add Option\n              </Button>\n            </Grid>\n            <Grid item xs={3}>\n              <FormControl fullWidth>\n                <InputLabel id=\"el-type-label\">Type</InputLabel>\n                <Select\n                  labelId=\"el-type-label\"\n                  id=\"el-type\"\n                  label=\"Type\"\n                  value={item.type}\n                  onChange={(e) => handleElType(item.id, e.target.value)}\n                >\n                  {formEl &&\n                    formEl.map((el, key) => (\n                      <MenuItem key={key} value={el.value}>\n                        {el.label}\n                      </MenuItem>\n                    ))}\n                </Select>\n              </FormControl>\n            </Grid>\n          </Grid>\n        </Box>\n        <Divider light />\n        <FormGroup row sx={{ alignItems: \"center\" }}>\n          <Tooltip title=\"Delete Element\" aria-label=\"delete-element\">\n            <IconButton\n              aria-label=\"delete-element\"\n              onClick={() => deleteEl(item.id)}\n              sx={{ ml: 2 }}\n            >\n              <DeleteOutlineOutlinedIcon color=\"secondary\" />\n            </IconButton>\n          </Tooltip>\n          <Tooltip title=\"Duplicate Element\" aria-label=\"duplicate-element\">\n            <IconButton\n              aria-label=\"duplicate-element\"\n              onClick={() => duplicateElement(item.id,item.type)}\n              sx={{ ml: 2 }}\n            >\n              <FileCopyIcon color=\"secondary\" />\n            </IconButton>\n          </Tooltip>\n\n          <FormControlLabel\n            control={\n              <Switch\n                checked={item.required}\n                onChange={() => handleRequired(item.id)}\n                name=\"required-field\"\n                color=\"secondary\"\n              />\n            }\n            label=\"Required\"\n            sx={{ ml: 2 }}\n          />\n        </FormGroup>\n      </Paper>\n    </Fragment>\n  );\n};\n\nexport default RadioInput;\n","import { Fragment } from \"react\";\n//Material UI Components\nimport TextField from \"@material-ui/core/TextField\";\nimport Box from \"@material-ui/core/Box\";\nimport Paper from \"@material-ui/core/Paper\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Grid from \"@material-ui/core/Grid\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport AdapterDateFns from \"@material-ui/lab/AdapterDateFns\";\nimport LocalizationProvider from \"@material-ui/lab/LocalizationProvider\";\nimport DatePicker from \"@material-ui/lab/DatePicker\";\n//Icons\nimport DragIndicatorIcon from \"@material-ui/icons/DragIndicator\";\nimport DeleteOutlineOutlinedIcon from \"@material-ui/icons/DeleteOutlineOutlined\";\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\n\n//Form Elements\nimport { formEl } from \"../constants\";\n\nconst DateInput = ({\n  item,\n  handleValue,\n  deleteEl,\n  handleRequired,\n  handleElType,\n  handleDate,\n  duplicateElement\n}) => {\n  return (\n    <Fragment>\n      <Paper elevation={1}>\n        <Box sx={{ textAlign: \"center\" }}>\n          <DragIndicatorIcon\n            sx={{ transform: \"rotate(-90deg)\", cursor: \"all-scroll\" }}\n          />\n        </Box>\n        <Box sx={{ p: 3 }}>\n          <Grid container spacing={1}>\n            <Grid item xs={9}>\n              <TextField\n                defaultValue={item.value}\n                variant=\"outlined\"\n                onBlur={(e) => handleValue(item.id, e)}\n                fullWidth\n                required={item.required}\n                placeholder=\"Date Label\"\n                sx={{ mb: 2 }}\n              />\n              <LocalizationProvider dateAdapter={AdapterDateFns}>\n                <DatePicker\n                  label=\"Select Date\"\n                  value={item?.date}\n                  onChange={(newDate) => {handleDate(item.id,newDate);}}\n                  renderInput={(params) => <TextField fullWidth {...params} />}\n                />\n              </LocalizationProvider>\n            </Grid>\n            <Grid item xs={3}>\n              <FormControl fullWidth>\n                <InputLabel id=\"el-type-label\">Type</InputLabel>\n                <Select\n                  labelId=\"el-type-label\"\n                  id=\"el-type\"\n                  label=\"Type\"\n                  value={item.type}\n                  onChange={(e) => handleElType(item.id, e.target.value)}\n                >\n                  {formEl &&\n                    formEl.map((el, key) => (\n                      <MenuItem key={key} value={el.value}>\n                        {el.label}\n                      </MenuItem>\n                    ))}\n                </Select>\n              </FormControl>\n            </Grid>\n          </Grid>\n        </Box>\n        <Divider light />\n        <FormGroup row sx={{ alignItems: \"center\" }}>\n          <Tooltip title=\"Delete Element\" aria-label=\"delete-element\">\n            <IconButton\n              aria-label=\"delete-element\"\n              onClick={() => deleteEl(item.id)}\n              sx={{ ml: 2 }}\n            >\n              <DeleteOutlineOutlinedIcon color=\"secondary\" />\n            </IconButton>\n          </Tooltip>\n          <Tooltip title=\"Duplicate Element\" aria-label=\"duplicate-element\">\n            <IconButton\n              aria-label=\"duplicate-element\"\n              onClick={() => duplicateElement(item.id,item.type)}\n              sx={{ ml: 2 }}\n            >\n              <FileCopyIcon color=\"secondary\" />\n            </IconButton>\n          </Tooltip>\n\n          <FormControlLabel\n            control={\n              <Switch\n                checked={item.required}\n                onChange={() => handleRequired(item.id)}\n                name=\"required-field\"\n                color=\"secondary\"\n              />\n            }\n            label=\"Required\"\n            sx={{ ml: 2 }}\n          />\n        </FormGroup>\n      </Paper>\n    </Fragment>\n  );\n};\n\nexport default DateInput;\n","import { Fragment } from \"react\";\n//Material UI Components\nimport TextField from \"@material-ui/core/TextField\";\nimport Box from \"@material-ui/core/Box\";\nimport Paper from \"@material-ui/core/Paper\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Grid from \"@material-ui/core/Grid\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport AdapterDateFns from \"@material-ui/lab/AdapterDateFns\";\nimport LocalizationProvider from \"@material-ui/lab/LocalizationProvider\";\nimport TimePicker from \"@material-ui/lab/TimePicker\";\n//Icons\nimport DragIndicatorIcon from \"@material-ui/icons/DragIndicator\";\nimport DeleteOutlineOutlinedIcon from \"@material-ui/icons/DeleteOutlineOutlined\";\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\n\n//Form Elements\nimport { formEl } from \"../constants\";\n\nconst TimeInput = ({\n  item,\n  handleValue,\n  deleteEl,\n  handleRequired,\n  handleElType,\n  handleTime,\n  duplicateElement\n}) => {\n  return (\n    <Fragment>\n      <Paper elevation={1}>\n        <Box sx={{ textAlign: \"center\" }}>\n          <DragIndicatorIcon\n            sx={{ transform: \"rotate(-90deg)\", cursor: \"all-scroll\" }}\n          />\n        </Box>\n        <Box sx={{ p: 3 }}>\n          <Grid container spacing={1}>\n            <Grid item xs={9}>\n              <TextField\n                defaultValue={item.value}\n                variant=\"outlined\"\n                onBlur={(e) => handleValue(item.id, e)}\n                fullWidth\n                required={item.required}\n                placeholder=\"Time Label\"\n                sx={{ mb: 2 }}\n              />\n              <LocalizationProvider dateAdapter={AdapterDateFns}>\n                <TimePicker\n                  label=\"Pick Time\"\n                  value={item?.time}\n                  onChange={(newTime) => handleTime(item.id, newTime)}\n                  renderInput={(params) => <TextField fullWidth {...params} />}\n                />\n              </LocalizationProvider>\n            </Grid>\n            <Grid item xs={3}>\n              <FormControl fullWidth>\n                <InputLabel id=\"el-type-label\">Type</InputLabel>\n                <Select\n                  labelId=\"el-type-label\"\n                  id=\"el-type\"\n                  label=\"Type\"\n                  value={item.type}\n                  onChange={(e) => handleElType(item.id, e.target.value)}\n                >\n                  {formEl &&\n                    formEl.map((el, key) => (\n                      <MenuItem key={key} value={el.value}>\n                        {el.label}\n                      </MenuItem>\n                    ))}\n                </Select>\n              </FormControl>\n            </Grid>\n          </Grid>\n        </Box>\n        <Divider light />\n        <FormGroup row sx={{ alignItems: \"center\" }}>\n          <Tooltip title=\"Delete Element\" aria-label=\"delete-element\">\n            <IconButton\n              aria-label=\"delete-element\"\n              onClick={() => deleteEl(item.id)}\n              sx={{ ml: 2 }}\n            >\n              <DeleteOutlineOutlinedIcon color=\"secondary\" />\n            </IconButton>\n          </Tooltip>\n          <Tooltip title=\"Duplicate Element\" aria-label=\"duplicate-element\">\n            <IconButton\n              aria-label=\"duplicate-element\"\n              onClick={() => duplicateElement(item.id,item.type)}\n              sx={{ ml: 2 }}\n            >\n              <FileCopyIcon color=\"secondary\" />\n            </IconButton>\n          </Tooltip>\n\n          <FormControlLabel\n            control={\n              <Switch\n                checked={item.required}\n                onChange={() => handleRequired(item.id)}\n                name=\"required-field\"\n                color=\"secondary\"\n              />\n            }\n            label=\"Required\"\n            sx={{ ml: 2 }}\n          />\n        </FormGroup>\n      </Paper>\n    </Fragment>\n  );\n};\n\nexport default TimeInput;\n","import { Fragment, useState } from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst Header = ({ title, description, setTitle, setDescription }) => {\n  return (\n    <Fragment>\n      <Box sx={{ mb: 3 }}>\n        <Paper elevation={2} sx={{ p: 3, borderTop: \"8px solid white\" }}>\n          <TextField\n            defaultValue={title}\n            onBlur={(e) => setTitle(e.target.value)}\n            variant=\"standard\"\n            placeholder=\"Tenant Ref\"\n            name=\"title\"\n            sx={{ mb: 3 }}\n            fullWidth\n          />\n          <TextField\n            name=\"description\"\n            defaultValue={description}\n            onBlur={(e) => setDescription(e.target.value)}\n            variant=\"standard\"\n            placeholder=\"Form Description\"\n            fullWidth\n            sx={{ mb: 2 }}\n            multiline\n            rows={2}\n          />\n        </Paper>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default Header;\n","import { Fragment, useState } from \"react\";\nimport uuid from \"react-uuid\";\nimport Nestable from \"react-nestable\";\n//Material UI Components\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Button from \"@material-ui/core/Button\";\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n//Icons\nimport AddCircleOutlineOutlinedIcon from \"@material-ui/icons/AddCircleOutlineOutlined\";\n//Form Elements\nimport {\n  TextFieldInput,\n  TextArea,\n  NumberInput,\n  RadioInput,\n  DateInput,\n  TimeInput,\n} from \"./elements\";\nimport Layout from './elements/layout'\nimport { formEl } from \"./constants.js\";\n//Components\nimport Header from \"./Header\";\nimport { useNavigate } from 'react-router-dom';\n\nconst FormBuilder = () => {\n  const navigate = useNavigate();\n  const initVal = formEl[0]?.value;\n\n  //State\n  const [title, setTitle] = useState(\"New reference form\");\n  const [description, setDescription] = useState(\"\");\n  const [data, setData] = useState([]);\n  const [formData, setFormData] = useState(\"text\");\n\n  const items = data;\n\n  //Function to add new element\n  const addElement = () => {\n    const data = {\n      id: uuid(),\n      value: null,\n      type: formData,\n      required: false,\n    };\n    setData((prevState) => [...prevState, data]);\n    setFormData(initVal);\n  };\n\n  //Function to delete element\n  const deleteEl = (id) => {\n    setData((prevState) => prevState.filter((val) => val.id !== id));\n  };\n\n  //Function to add element at specific pos and return arr\n  const addAfter = (elArray, index, newEl) => {\n    return [...elArray.slice(0, index+1), newEl, ...elArray.slice(index+1)];\n  };\n\n  //Function to duplicate element\n  const duplicateElement = (elId, elType) => {\n    let elIdx = data.findIndex( (el) =>el.id === elId);\n    let newEl = {\n      id: uuid(),\n      value: null,\n      type: elType,\n      required: false,\n    }\n    let newArr = addAfter(data,elIdx,newEl)\n    setData(newArr)\n  };\n\n  //Function to handle sorting of elements\n  const handleOnChangeSort = ({ items }) => {\n    setData(items);\n  };\n\n  //Function to Handle Input Values\n  const handleValue = (id, e) => {\n    let newArr = data.map((el) => {\n      if (el.id == id) {\n        return { ...el, value: e.target.value };\n      } else {\n        return el;\n      }\n    });\n    setData(newArr);\n  };\n\n  //Function to Handle Required\n  const handleRequired = (id) => {\n    let newArr = data.map((el) => {\n      if (el.id == id) {\n        return { ...el, required: !el.required };\n      } else {\n        return el;\n      }\n    });\n    setData(newArr);\n  };\n\n  //Function to Handle Element Type\n  const handleElType = (id, type) => {\n    let newArr = data.map((el) => {\n      if (el.id == id) {\n        return { ...el, type: type };\n      } else {\n        return el;\n      }\n    });\n    setData(newArr);\n  };\n\n  //Function to Handle Options\n  const addOption = (id, newOption) => {\n    let newArr = data.map((el) => {\n      if (el.id == id) {\n        const objVal = \"options\" in el ? el?.options : [];\n        return { ...el, options: [...objVal, newOption] };\n      } else {\n        return el;\n      }\n    });\n    setData(newArr);\n  };\n\n  //Function to Handle Date\n  const handleDate = (id, dateVal) => {\n    let newArr = data.map((el) => {\n      if (el.id == id) {\n        return { ...el, date: dateVal };\n      } else {\n        return el;\n      }\n    });\n    setData(newArr);\n  };\n\n  //Function to Handle Time\n  const handleTime = (id, dateVal) => {\n    let newArr = data.map((el) => {\n      if (el.id == id) {\n        return { ...el, time: dateVal };\n      } else {\n        return el;\n      }\n    });\n    setData(newArr);\n  };\n\n  //Function to Change Option Values\n  const handleOptionValues = (elId, optionId, optionVal) => {\n    let newArr = data.map((el) => {\n      if (el.id == elId) {\n        el?.options &&\n          el?.options.map((opt) => {\n            if (opt.id == optionId) {\n              opt.value = optionVal;\n            }\n          });\n        return el;\n      } else {\n        return el;\n      }\n    });\n    setData(newArr);\n  };\n\n  //Function to Delete Optin\n  const deleteOption = (elId, optionId) => {\n    let newArr = data.map((el) => {\n      if (el.id == elId) {\n        let newOptions =\n          el?.options && el?.options.filter((opt) => opt.id != optionId);\n        return { ...el, options: newOptions };\n      } else {\n        return el;\n      }\n    });\n    setData(newArr);\n  };\n\n   //Function to handle submission\n   const handleSubmit = () => {\n    navigate('/preview', { state: { formData: data } });\n};\n\n\n  //Render items\n  const renderElements = ({ item }) => {\n    switch (item.type) {\n      case \"text\":\n        return (\n          <TextFieldInput\n            item={item}\n            handleValue={handleValue}\n            deleteEl={deleteEl}\n            handleRequired={handleRequired}\n            handleElType={handleElType}\n            duplicateElement={duplicateElement}\n          />\n        );\n      case \"textarea\":\n        return (\n          <TextArea\n            item={item}\n            handleValue={handleValue}\n            deleteEl={deleteEl}\n            handleRequired={handleRequired}\n            handleElType={handleElType}\n            duplicateElement={duplicateElement}\n          />\n        );\n      case \"number\":\n        return (\n          <NumberInput\n            item={item}\n            handleValue={handleValue}\n            deleteEl={deleteEl}\n            handleRequired={handleRequired}\n            handleElType={handleElType}\n            duplicateElement={duplicateElement}\n          />\n        );\n      case \"radio\":\n        return (\n          <RadioInput\n            item={item}\n            handleValue={handleValue}\n            deleteEl={deleteEl}\n            handleRequired={handleRequired}\n            handleElType={handleElType}\n            addOption={addOption}\n            handleOptionValues={handleOptionValues}\n            deleteOption={deleteOption}\n            duplicateElement={duplicateElement}\n          />\n        );\n      case \"date\":\n        return (\n          <DateInput\n            item={item}\n            handleValue={handleValue}\n            deleteEl={deleteEl}\n            handleRequired={handleRequired}\n            handleElType={handleElType}\n            handleDate={handleDate}\n            duplicateElement={duplicateElement}\n          />\n        );\n      case \"time\":\n        return (\n          <TimeInput\n            item={item}\n            handleValue={handleValue}\n            deleteEl={deleteEl}\n            handleRequired={handleRequired}\n            handleElType={handleElType}\n            handleTime={handleTime}\n            duplicateElement={duplicateElement}\n          />\n        );\n      default:\n        return <Fragment></Fragment>;\n    }\n  };\n\n  console.log(data);\n  \n  return (\n    <Fragment>\n      {/* Navbar */}\n      <AppBar position=\"static\" color=\"default\">\n              <Toolbar>\n                <Grid container justifyContent=\"center\">\n                  <Grid item>\n                    <Typography variant=\"h6\">\n                      Tenant Reference - Form Builder\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </Toolbar>\n            </AppBar>\n\n            <Box mt={3}>\n        <Grid container spacing={1} direction=\"column\" style={{ minHeight: '100vh' }}>\n          \n          {/* Your main content */}\n          <Grid item container direction=\"row\" justifyContent=\"center\" flex={1}>\n            <Grid item md={6}>\n              <Header\n                title={title}\n                setTitle={setTitle}\n                description={description}\n                setDescription={setDescription}\n              />\n              <Nestable\n                items={items}\n                renderItem={renderElements}\n                maxDepth={1}\n                onChange={handleOnChangeSort}\n              />\n            </Grid>\n            <Grid item md={1}>\n              <Tooltip title=\"Add Element\" aria-label=\"add-element\">\n                <IconButton\n                  aria-label=\"add-element\"\n                  onClick={addElement}\n                  sx={{ position: \"sticky\", top: 30 }}\n                >\n                  <AddCircleOutlineOutlinedIcon color=\"secondary\" />\n                </IconButton>\n              </Tooltip>\n            </Grid>\n          </Grid>\n          \n          {/* Your button */}\n          <Grid item container justifyContent=\"center\">\n            <Grid item md={1}>\n              <Tooltip title=\"Submit\" aria-label=\"submit\">\n                <Button variant=\"contained\" color=\"secondary\" onClick={handleSubmit}>\n                  Submit\n                </Button>\n              </Tooltip>\n            </Grid>\n          </Grid>\n          \n        </Grid>\n      </Box>\n\n    </Fragment>\n  );\n  \n};\nexport default FormBuilder;\n","import React from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom'; // import useNavigate\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nimport {\n  TextFieldInput,\n  TextArea,\n  NumberInput,\n  RadioInput,\n  DateInput,\n  TimeInput,\n} from '../FormBuilder/elements/index.jsx'; // Adjust the path as needed\n\nconst Preview = () => {\n  const location = useLocation();\n  const navigate = useNavigate(); // use the hook here\n  const formData = location.state?.formData;\n\n  const renderElements = (item) => {\n    switch (item.type) {\n      case 'text':\n        return <TextFieldInput item={item} />;\n      case 'textarea':\n        return <TextArea item={item} />;\n      case 'number':\n        return <NumberInput item={item} />;\n      case 'radio':\n        return <RadioInput item={item} />;\n      case 'date':\n        return <DateInput item={item} />;\n      case 'time':\n        return <TimeInput item={item} />;\n      default:\n        return null;\n    }\n  };\n\n  const handleSendEmail = () => {\n    navigate('/send-email'); // navigate to the send email page\n  };\n\n  return (\n    <Grid container direction=\"column\" spacing={1} style={{ minHeight: '100vh' }}>\n      {/* Navbar */}\n      <AppBar position=\"static\" color=\"default\">\n        <Toolbar>\n          <Grid container justifyContent=\"center\">\n            <Grid item>\n              <Typography variant=\"h6\">\n                Tenant Reference - From Preview\n              </Typography>\n            </Grid>\n          </Grid>\n        </Toolbar>\n      </AppBar>\n\n      {/* Add some space */}\n      <Box mt={3}>\n        <Grid item container direction=\"row\" justifyContent=\"center\" flex={1}>\n          <Grid item md={6}>\n            {formData.map(item => renderElements(item))}\n          </Grid>\n        </Grid>\n      </Box>\n\n      {/* Buttons */}\n      <Grid item container justifyContent=\"center\" spacing={2}>\n        <Grid item>\n          <Button variant=\"contained\" color=\"primary\">\n            Edit\n          </Button>\n        </Grid>\n        <Grid item>\n          <Button variant=\"contained\" color=\"secondary\" onClick={handleSendEmail}> \n            Send Form\n          </Button>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Preview;\n","import React, { useState, useRef } from 'react';\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport TextField from \"@material-ui/core/TextField\";\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nconst SendEmailPage = () => {\n    const [email, setEmail] = useState('');\n    const [subject, setSubject] = useState('Tenant Reference Form');\n    const [message, setMessage] = useState('');\n    const [template, setTemplate] = useState('');\n    \n    const previewPageLink = 'http://localhost:3000/preview'; // Change this based on your actual deployment\n\n    const templates = {\n        default: 'Dear [Landlord/Employer],\\n\\nPlease fill out the attached reference form. You can access it through the following link:\\n' + previewPageLink + '\\n\\nThank you for your cooperation.',\n        // Add more templates as needed\n    };\n\n    const handleTemplateChange = (event) => {\n        setTemplate(event.target.value);\n        setMessage(templates[event.target.value] || '');\n    };\n\n    const handleSubmit = () => {\n        // Handle email sending logic here\n        console.log('Email:', email);\n        console.log('Subject:', subject);\n        console.log('Message:', message);\n    };\n\n    const insertLink = () => {\n        setMessage((prevMessage) => {\n            const cursorPos = textareaRef.current.selectionStart;\n            const newMessage =\n                prevMessage.substring(0, cursorPos) +\n                previewPageLink +\n                prevMessage.substring(cursorPos);\n            return newMessage;\n        });\n    };\n    \n    const textareaRef = useRef();\n\n    return (\n        <Grid container direction=\"column\" spacing={1} style={{ minHeight: '100vh' }}>\n            {/* Navbar */}\n            <AppBar position=\"static\" color=\"default\">\n                <Toolbar>\n                    <Grid container justifyContent=\"center\">\n                        <Grid item>\n                            <Typography variant=\"h6\">\n                                Tenant Reference - Send Email\n                            </Typography>\n                        </Grid>\n                    </Grid>\n                </Toolbar>\n            </AppBar>\n\n            {/* Content */}\n            <Box mt={3}>\n                <Grid container direction=\"row\" justifyContent=\"center\">\n                    <Grid item md={6}>\n                        <TextField\n                            fullWidth\n                            label=\"Recipient's Email\"\n                            value={email}\n                            onChange={(e) => setEmail(e.target.value)}\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                        />\n                        <TextField\n                            fullWidth\n                            label=\"Subject\"\n                            value={subject}\n                            onChange={(e) => setSubject(e.target.value)}\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                        />\n                        <FormControl fullWidth variant=\"outlined\" margin=\"normal\">\n                            <InputLabel id=\"template-select-label\">Template</InputLabel>\n                            <Select\n                                labelId=\"template-select-label\"\n                                id=\"template-select\"\n                                value={template}\n                                onChange={handleTemplateChange}\n                                label=\"Template\"\n                            >\n                                <MenuItem value=\"default\">Default Template</MenuItem>\n                                {/* Add more templates as MenuItem components */}\n                            </Select>\n                        </FormControl>\n                        <TextareaAutosize\n                            rowsMin={8}\n                            placeholder=\"Message Content\"\n                            value={message}\n                            onChange={(e) => setMessage(e.target.value)}\n                            style={{ width: '100%', padding: '10px', marginTop: '10px' }}\n                        />\n                    </Grid>\n                </Grid>\n            </Box>\n\n            {/* Send Button */}\n            <Grid item container justifyContent=\"center\" spacing={2}>\n                <Grid item>\n                    <Button variant=\"contained\" color=\"primary\" onClick={handleSubmit}>\n                        Send Email\n                    </Button>\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default SendEmailPage;\n","// utils/authUtils.js\nconst fs = require('fs');\n\nconst userFilePath = './users.txt';\n\nexport const registerUser = (email, password) => {\n  // Check if the user already exists\n  const users = readUsersFile();\n  if (users.find(user => user.email === email)) {\n    throw new Error('User already exists');\n  }\n\n  // Create a new user object\n  const newUser = { email, password };\n  \n  // Append the new user to the file\n  fs.appendFileSync(userFilePath, JSON.stringify(newUser) + '\\n');\n\n  return newUser;\n};\n\nexport const loginUser = (email, password) => {\n  // Check if the user exists and the password is correct\n  const users = readUsersFile();\n  const user = users.find(user => user.email === email && user.password === password);\n\n  if (!user) {\n    throw new Error('Invalid email or password');\n  }\n\n  return user;\n};\n\nconst readUsersFile = () => {\n  try {\n    // Read the file and parse its content\n    const content = fs.readFileSync(userFilePath, 'utf-8');\n    const lines = content.trim().split('\\n');\n    const users = lines.map(line => JSON.parse(line));\n    return users;\n  } catch (error) {\n    // If the file doesn't exist, return an empty array\n    return [];\n  }\n};\n","// Login/index.jsx\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { loginUser } from '../../utils/authUtils';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\n\nconst Login = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleLogin = () => {\n    // Add your login logic here\n    console.log('Login clicked');\n  };\n\n  return (\n    <Grid container direction=\"column\" spacing={1} style={{ minHeight: '100vh' }}>\n      {/* Navbar */}\n      <AppBar position=\"static\" color=\"default\">\n        <Toolbar>\n          <Grid container justifyContent=\"center\">\n            <Grid item>\n              <Typography variant=\"h6\">\n                Tenant_ID - Login\n              </Typography>\n            </Grid>\n          </Grid>\n        </Toolbar>\n      </AppBar>\n\n      <Grid container justifyContent=\"center\" alignItems=\"center\" style={{ marginTop: '1rem' }}>\n        <Grid item xs={10} sm={8} md={6} lg={4}>\n          <Typography variant=\"subtitle1\" paragraph>\n            Welcome To Simplified Tenant Management\n          </Typography>\n          <form>\n            <TextField\n              label=\"Email\"\n              variant=\"outlined\"\n              fullWidth\n              margin=\"normal\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n            <TextField\n              label=\"Password\"\n              variant=\"outlined\"\n              fullWidth\n              margin=\"normal\"\n              type=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n            <Button variant=\"contained\" color=\"primary\" fullWidth onClick={handleLogin}>\n              Login\n            </Button>\n          </form>\n          <Typography variant=\"body2\" style={{ marginTop: '1rem' }}>\n            Don't have an account? <Link to=\"/register\">Register here</Link>\n          </Typography>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Login;\n","import React, { useState } from 'react';\n// import { Link } from 'react-router-dom';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { useHistory } from 'react-router-dom';\nimport { Link, useNavigate } from 'react-router-dom';\n\nconst Register = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [registeredUsers, setRegisteredUsers] = useState([]);\n  const navigate = useNavigate();\n  \n\n  const handleRegister = () => {\n    if (password !== confirmPassword) {\n      console.error('Passwords do not match');\n      return;\n    }\n  \n    const newUser = { email, password };\n  \n    // Retrieve existing users from localStorage\n    const existingUsers = JSON.parse(localStorage.getItem('registeredUsers')) || [];\n  \n    // Check if the user already exists\n    if (existingUsers.some(user => user.email === newUser.email)) {\n      console.error('User already exists');\n      return;\n    }\n  \n    // Add the new user\n    const updatedUsers = [...existingUsers, newUser];\n    localStorage.setItem('registeredUsers', JSON.stringify(updatedUsers));\n  \n    console.log('Registration successful');\n    navigate('/');\n  };\n  \n\n  return (\n    <Grid container direction=\"column\" spacing={1} style={{ minHeight: '100vh' }}>\n      {/* Navbar */}\n      <AppBar position=\"static\" color=\"default\">\n        <Toolbar>\n          <Grid container justifyContent=\"center\">\n            <Grid item>\n              <Typography variant=\"h6\">\n                Tenant_ID - Register\n              </Typography>\n            </Grid>\n          </Grid>\n        </Toolbar>\n      </AppBar>\n\n      <Grid item container justifyContent=\"center\" alignItems=\"center\" style={{ marginTop: '1rem' }}>\n        <Grid item xs={10} sm={8} md={6} lg={4}>\n          <Typography variant=\"subtitle1\" paragraph>\n            Welcome To Simplified Tenant Management\n          </Typography>\n          <form>\n            <TextField\n              label=\"Email\"\n              variant=\"outlined\"\n              fullWidth\n              margin=\"normal\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n            <TextField\n              label=\"Password\"\n              variant=\"outlined\"\n              fullWidth\n              margin=\"normal\"\n              type=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n            <TextField\n              label=\"Confirm Password\"\n              variant=\"outlined\"\n              fullWidth\n              margin=\"normal\"\n              type=\"password\"\n              value={confirmPassword}\n              onChange={(e) => setConfirmPassword(e.target.value)}\n            />\n            <Button variant=\"contained\" color=\"primary\" fullWidth onClick={handleRegister}>\n              Get Started\n            </Button>\n          </form>\n          <Typography variant=\"body2\" style={{ marginTop: '1rem' }}>\n            Already exploring? <Link to=\"/login\">Login here</Link>\n          </Typography>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Register;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport FormBuilder from '@components/FormBuilder';\nimport Preview from '@components/Preview'; \nimport SendEmailPage from '@components/SendEmail/SendEmailPage';\nimport Login from '@components/Login';\nimport Register from '@components/Register';\nimport 'react-nestable/dist/styles/index.css';\n\nconst App = () => {\n  return (\n    <Router basename=\"/Tenant_Ref\"> {/* Set the basename to your repository name */}\n      <Routes>\n        <Route exact path=\"/\" element={<FormBuilder />} />\n        <Route exact path=\"/preview\" element={<Preview />} />\n        <Route exact path=\"/send-email\" element={<SendEmailPage />} />\n        <Route exact path=\"/login\" element={<Login />} />\n        <Route exact path=\"/register\" element={<Register />} />\n      </Routes>\n    </Router>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}